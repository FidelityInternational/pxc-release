set -euo pipefail

# Nice output formatting
normal=$(tput sgr0)
bold=$(tput bold)
red=$(tput setaf 1)

<% if_link('galera-agent') do |galera_agent| %>

mysqld=/var/vcap/packages/pxc/bin/mysqld
mysql_config=/var/vcap/jobs/pxc-mysql/config/my.cnf
recovery_log=/var/vcap/sys/log/pxc-mysql/get_sequence_number.log

report_sequence_number() {
  if bpm pid pxc-mysql -p galera-init > /dev/null 2>&1; then
    echo ""
    echo -e "${bold}${red}\tCannot get sequence number while MySQL is running.${normal}"
    echo -e "${bold}${red}\tRefer to documentation on how to shut down running instances.${normal}"
    echo ""
    return 1
  fi

  if [[ $EUID -ne 0 ]]; then
    echo -e "${bold}${red}$0 must be run as root${normal}"
    return 1
  fi

  local wsrep_pos

  wsrep_pos=$("${mysqld}" "--defaults-file=${mysql_config}" --disable-log-error --wsrep-recover \
      |& tee "${recovery_log}" \
      |  awk '/WSREP: Recovered position:/ { print $NF; }') || rc=$?

  if [[ ${rc:-0} -ne 0 ]]; then
    echo "${bold}${red}Failure obtaining sequence number!${normal}"
    echo "${bold}${red}Check the recovery log '${recovery_log}' for details...${normal}"
    return 1
  fi

  cluster_uuid="$(cut -d':' -f 1 <<< ${wsrep_pos})"
  seq_no="$(cut -d':' -f 2 <<< ${wsrep_pos})"

  if [[ "$seq_no" =~ [0-9]+$ ]]; then
    instance_id=$(</var/vcap/instance/id)
    echo "{  \"cluster_uuid\": \"${cluster_uuid}\", \"seqno\": ${seq_no}, \"instance_id\": \"${instance_id}\" }"
  else
    echo "${bold}${red}Sequence number found does not appear to be a valid number: ${seq_no}${normal}"
    echo "${bold}${red}Sequence number found does not appear to be a valid number: ${seq_no}${normal}"
  fi
}

report_sequence_number

<% end.else do %>
echo "${bold}${red}This tool only works with a Galera cluster with more than one node.${normal}"
exit 1
<% end %>
